class ChromeAiTranslator{static Object=options=>{const selfObject=new this(options);return selfObject.extraData()};constructor(options){this.btnSelector=options.btnSelector||!1,this.btnClass=options.btnClass||!1,this.btnText=options.btnText||`Translate To ${options.targetLanguageLabel}`,this.stringSelector=options.stringSelector||!1,this.progressBarSelector=options.progressBarSelector||!1,this.onStartTranslationProcess=options.onStartTranslationProcess||(()=>{}),this.onComplete=options.onComplete||(()=>{}),this.onLanguageError=options.onLanguageError||(()=>{}),this.onBeforeTranslate=options.onBeforeTranslate||(()=>{}),this.onAfterTranslate=options.onAfterTranslate||(()=>{}),this.sourceLanguage=options.sourceLanguage||"en",this.targetLanguage=options.targetLanguage||"hi",this.targetLanguageLabel=options.targetLanguageLabel||"Hindi",this.sourceLanguageLabel=options.sourceLanguageLabel||"English"}extraData=async()=>{const langSupportedStatus=await ChromeAiTranslator.languageSupportedStatus(this.sourceLanguage,this.targetLanguage,this.targetLanguageLabel,this.sourceLanguageLabel);return!0!==langSupportedStatus?(this.onLanguageError(langSupportedStatus),{}):(this.defaultLang=this.targetLanguage,{continueTranslation:this.continueTranslation,stopTranslation:this.stopTranslation,startTranslation:this.startTranslation,reInit:this.reInit,init:this.init})};static languageSupportedStatus=async(sourceLanguage,targetLanguage,targetLanguageLabel,sourceLanguageLabel)=>{const supportedLanguages=["en","es","ja","ar","de","bn","fr","hi","it","ko","nl","pl","pt","ru","th","tr","vi","zh","zh-hant","bg","cs","da","el","fi","hr","hu","id","iw","lt","no","ro","sk","sl","sv","uk","kn","ta","te","mr"].map(lang=>lang.toLowerCase()),safeBrowser="https:"===window.location.protocol,browserContentSecure=window.isSecureContext;if(!window.hasOwnProperty("chrome")||!navigator.userAgent.includes("Chrome")||navigator.userAgent.includes("Edg")){const message=jQuery('<span style="color: #ff4646; display: inline-block;">\n                <strong>Important Notice:</strong>\n                <ol>\n                    <li>The Translator API, which leverages Chrome local AI models, is designed specifically for use with the Chrome browser.</li>\n                    <li>For comprehensive information about the Translator API, <a href="https://developer.chrome.com/docs/ai/translator-api" target="_blank">click here</a>.</li>\n                </ol>\n                <p>Please ensure you are using the Chrome browser for optimal performance and compatibility.</p>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n            </span>');return message}if(!("translation"in self&&"createTranslator"in self.translation||"ai"in self&&"translator"in self.ai||"Translator"in self&&"create"in self.Translator||safeBrowser||browserContentSecure)){const message=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <strong>Important Notice:</strong>\n                <ol>\n                    <li>\n                        The Translator API is not functioning due to an insecure connection.\n                    </li>\n                    <li>\n                        Please switch to a secure connection (HTTPS) or add this URL to the list of insecure origins treated as secure by visiting \n                        <span data-clipboard-text="chrome://flags/#unsafely-treat-insecure-origin-as-secure" target="_blank" class="chrome-ai-translator-flags">\n                            <strong  style="color: #2271b1;">\n                                 chrome://flags/#unsafely-treat-insecure-origin-as-secure ${ChromeAiTranslator.svgIcons("copy")}\n                            </strong>\n                        </span>.\n                        Click on the URL to copy it, then open a new window and paste this URL to access the settings.\n                    </li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return message}if(!("translation"in self&&"createTranslator"in self.translation||"ai"in self&&"translator"in self.ai||"Translator"in self&&"create"in self.Translator)){const message=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Steps to Enable the Translator AI Modal:</h4>\n                <ol>\n                    <li>Open this URL in a new Chrome tab: <strong style="color: #2271b1;"><span data-clipboard-text="chrome://flags/#translation-api" target="_blank" class="chrome-ai-translator-flags">chrome://flags/#translation-api ${ChromeAiTranslator.svgIcons("copy")}</span></strong>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>Ensure that the <strong>Experimental translation API</strong> option is set to <strong>Enabled</strong>.</li>\n                    <li>Click on the <strong>Save</strong> button to apply the changes.</li>\n                    <li>The Translator AI modal should now be enabled and ready for use.</li>\n                </ol>\n                <p>For more information, please refer to the <a href="https://developer.chrome.com/docs/ai/translator-api" target="_blank">documentation</a>.</p>   \n                <p>If the issue persists, please ensure that your browser is up to date and restart your browser.</p>\n                <p>If you continue to experience issues after following the above steps, please <a href="https://my.coolplugins.net/account/support-tickets/" target="_blank" rel="noopener">open a support ticket</a> with our team. We are here to help you resolve any problems and ensure a smooth translation experience.</p>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n                </span>`);return message}if(!supportedLanguages.includes(targetLanguage.toLowerCase())){const message=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <strong>Language Support Information:</strong>\n                <ol>\n                    <li>The current version of Chrome AI Translator does not support the Target Language <strong>${targetLanguageLabel} (${targetLanguage})</strong>.</li>\n                    <li>To view the list of supported languages, please <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags"><strong style="color: #2271b1;">chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}</strong></span>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>Ensure your Chrome browser is updated to the latest version for optimal performance.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return message}if(!supportedLanguages.includes(sourceLanguage.toLowerCase())){const message=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <strong>Language Support Information:</strong>\n                <ol>\n                    <li>The current version of Chrome AI Translator does not support the Source Language <strong>${sourceLanguageLabel} (${sourceLanguage})</strong></li>\n                    <li>To view the list of supported languages, please <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}</span>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>Ensure your Chrome browser is updated to the latest version for optimal performance.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return message}const status=await ChromeAiTranslator.languagePairAvality(sourceLanguage,targetLanguage);if("after-download"===status||"downloadable"===status||"unavailable"===status){const message=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Installation Instructions for Language Packs:</h4>\n                <ol>\n                    <li>\n                        To proceed, please install the language pack for <strong>${targetLanguageLabel} (${targetLanguage})</strong> or <strong>${sourceLanguageLabel} (${sourceLanguage})</strong>.\n                    </li>\n                    <li>\n                        After installing the language pack, add this language to your browser's system languages in Chrome settings.<br>\n                        Go to <strong>Settings &gt; Languages &gt; Add languages</strong> and add <strong>${targetLanguageLabel}</strong> or <strong>${sourceLanguageLabel}</strong> to your preferred languages list & reload the page.\n                    </li>\n                    <li>\n                        You can install it by visiting the following link: \n                        <strong style="color: #2271b1;">\n                            <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">\n                                chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}\n                            </span>\n                        </strong>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.\n                    </li>\n                    <li>\n                        Please check if both your source <strong>(<span style="color:#2271b1">${sourceLanguage}</span>)</strong> and target <strong>(<span style="color:#2271b1">${targetLanguage}</span>)</strong> languages are available in the language packs list.\n                    </li>\n                    <li>\n                        You need to install both language packs for translation to work. You can search for each language by its language code: <strong>${sourceLanguage}</strong> and <strong>${targetLanguage}</strong>.\n                    </li>\n                    <li>For more help, refer to the <a href="https://developer.chrome.com/docs/ai/translator-api#supported-languages" target="_blank">documentation to check supported languages</a>.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return message}if("downloading"===status){const message=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Language Pack Download In Progress:</h4>\n                <ol>\n                    <li>\n                        The language pack for <strong>${targetLanguageLabel} (${targetLanguage})</strong> or <strong>${sourceLanguageLabel} (${sourceLanguage})</strong> is already being downloaded.\n                    </li>\n                    <li>\n                        <strong>You do not need to start the download again.</strong> Please wait for the download to complete. Once finished, the translation feature will become available automatically.\n                    </li>\n                    <li>\n                        You can check the download progress by opening:\n                        <strong style="color: #2271b1;">\n                            <span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">\n                                chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}\n                            </span>\n                        </strong>\n                        . Click on the URL to copy it, then open a new window and paste this URL in Chrome to view the status.\n                    </li>\n                    <li>\n                        <strong>What to do next:</strong>\n                        <ul style="margin-top: .5em;">\n                            <li>Wait for the download to finish. The status will change to <strong>Ready</strong> or <strong>Installed</strong> in the <strong>Language Packs</strong> section.</li>\n                            <li>After the language pack is installed, you may need to <strong>reload</strong> or <strong>restart</strong> your browser for the changes to take effect.</li>\n                        </ul>\n                    </li>\n                    <li>\n                        For more help, refer to the <a href="https://developer.chrome.com/docs/ai/translator-api#supported-languages" target="_blank">documentation to check supported languages</a>.\n                    </li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return message}if("readily"!==status&&"available"!==status){const message=jQuery(`<span style="color: #ff4646; display: inline-block;">\n                <h4>Language Pack Installation Required</h4>\n                <ol>\n                    <li>Please ensure that the language pack for <strong>${targetLanguageLabel} (${targetLanguage})</strong> or <strong>${sourceLanguageLabel} (${sourceLanguage})</strong> is installed and set as a preferred language in your browser.</li>\n                    <li>To install the language pack, visit <strong><span data-clipboard-text="chrome://on-device-translation-internals" target="_blank" class="chrome-ai-translator-flags">chrome://on-device-translation-internals ${ChromeAiTranslator.svgIcons("copy")}</span></strong>. Click on the URL to copy it, then open a new window and paste this URL to access the settings.</li>\n                    <li>If you encounter any issues, please refer to the <a href="https://developer.chrome.com/docs/ai/translator-api#supported-languages" target="_blank">documentation to check supported languages</a> for further assistance.</li>\n                </ol>\n                <div style="text-align: right;">\n                    <button onclick="location.reload()" class="lcat-error-reload-btn">Reload Page</button>\n                </div>\n            </span>`);return message}return!0};static languagePairAvality=async(source,target)=>{try{const translator=await self.Translator.create({sourceLanguage:source,targetLanguage:target,monitor(m){m.addEventListener("downloadprogress",e=>{console.log(`Downloaded ${100*e.loaded}%`)})}})}catch(err){console.log("err",err)}if("translation"in self&&"createTranslator"in self.translation){const status=await self.translation.canTranslate({sourceLanguage:source,targetLanguage:target});return status}if("ai"in self&&"translator"in self.ai){const translatorCapabilities=await self.ai.translator.capabilities(),status=await translatorCapabilities.languagePairAvailable(source,target);return status}if("Translator"in self&&"create"in self.Translator){const status=await self.Translator.availability({sourceLanguage:source,targetLanguage:target});return status}return!1};AITranslator=async targetLanguage=>{if("translation"in self&&"createTranslator"in self.translation){const translator=await self.translation.createTranslator({sourceLanguage:this.sourceLanguage,targetLanguage:targetLanguage});return translator}if("ai"in self&&"translator"in self.ai){const translator=await self.ai.translator.create({sourceLanguage:this.sourceLanguage,targetLanguage:targetLanguage});return translator}if("Translator"in self&&"create"in self.Translator){const translator=await self.Translator.create({sourceLanguage:this.sourceLanguage,targetLanguage:targetLanguage});return translator}return!1};init=async()=>{this.appendBtn(),this.translationStart=!1,this.completedTranslateIndex=0,this.completedCharacterCount=0,this.translateBtnEvents(),this.progressBarSelector&&this.addProgressBar()};appendBtn=()=>{this.translateBtn=jQuery(`<button class="button button-primary${this.btnClass?" "+this.btnClass:""}">${this.btnText}</button>`),jQuery(this.btnSelector).append(this.translateBtn)};formatCharacterCount=number=>number>=1e6?(number/1e6).toFixed(1)+"M":number>=1e3?(number/1e3).toFixed(1)+"K":number;translateBtnEvents=e=>this.btnSelector&&0!==jQuery(this.btnSelector).length?this.stringSelector&&0!==jQuery(this.stringSelector).length?(this.translateStatus=!0,this.translateBtn.off("click"),this.translateBtn.prop("disabled",!1),void(this.translationStart?this.translateStringEle.length>this.completedTranslateIndex+1?this.translateBtn.on("click",()=>{this.onStartTranslationProcess(),this.stringTranslation(this.completedTranslateIndex+1)}):(this.onComplete({translatedStringsCount:this.completedCharacterCount}),this.translateBtn.prop("disabled",!0)):this.translateBtn.on("click",this.startTranslationProcess))):this.onLanguageError("The string selector is missing. Please provide a valid selector for the strings to be translated."):this.onLanguageError("The button selector is missing. Please provide a valid selector for the button.");startTranslationProcess=async()=>{this.onStartTranslationProcess();const langCode=this.defaultLang;this.translationStart=!0,this.translateStringEle=jQuery(this.stringSelector),this.totalStringCount=Array.from(this.translateStringEle).map(ele=>ele.innerText.length).reduce((a,b)=>a+b,0),this.translator=await this.AITranslator(langCode),this.translateStringEle.length>0&&await this.stringTranslation(this.completedTranslateIndex)};stringTranslation=async index=>{if(!this.translateStatus)return;const ele=this.translateStringEle[index];this.onBeforeTranslate(ele);const orignalText=ele.innerText;let originalString=[];ele.childNodes.length>0&&!ele.querySelector(".notranslate")?ele.childNodes.forEach(child=>{3===child.nodeType&&""!==child.nodeValue.trim()&&originalString.push(child)}):ele.querySelector(".notranslate")&&ele.childNodes.forEach(child=>{3===child.nodeType&&""!==child.nodeValue.trim()&&originalString.push(child)}),originalString.length>0&&await this.stringTranslationBatch(originalString,0),this.completedCharacterCount+=orignalText.length,this.completedTranslateIndex=index,this.progressBarSelector&&this.updateProgressBar(),this.onAfterTranslate(ele),this.translateStringEle.length>index+1&&await this.stringTranslation(this.completedTranslateIndex+1),index===this.translateStringEle.length-1&&(this.translateBtn.prop("disabled",!0),this.onComplete({characterCount:this.completedCharacterCount}),jQuery(this.progressBarSelector).find(".chrome-ai-translator-strings-count").show().find(".totalChars").text(this.formatCharacterCount(this.completedCharacterCount)))};stringTranslationBatch=async(originalString,index)=>{const translatedString=await this.translator.translate(originalString[index].nodeValue);return translatedString&&""!==translatedString&&(originalString[index].nodeValue=translatedString),index<originalString.length-1&&await this.stringTranslationBatch(originalString,index+1),!0};addProgressBar=()=>{if(!document.querySelector("#chrome-ai-translator-modal .chrome-ai-translator_progress_bar")){const progressBar=jQuery('\n                <div class="chrome-ai-translator_progress_bar" style="background-color: #f3f3f3;border-radius: 10px;overflow: hidden;margin: 1.5rem auto; width: 50%;">\n                <div class="chrome-ai-translator_progress" style="overflow: hidden;transition: width .5s ease-in-out; border-radius: 10px;text-align: center;width: 0%;height: 20px;box-sizing: border-box;background-color: #4caf50; color: #fff; font-weight: 600;"></div>\n                </div>\n                <div style="display:none; color: white;" class="chrome-ai-translator-strings-count hidden">\n                    Wahooo! You have saved your valuable time via auto translating \n                    <strong class="totalChars">0</strong> characters using \n                    <strong>\n                        Chrome AI Translator\n                    </strong>\n                </div>\n            ');jQuery(this.progressBarSelector).append(progressBar)}};updateProgressBar=()=>{const progress=this.completedCharacterCount/this.totalStringCount*1e3/10;let decimalValue=progress.toString().split(".")[1]||"";decimalValue=decimalValue.length>0&&"0"!==decimalValue[0]?decimalValue[0]:"";const formattedProgress=parseInt(progress)+`${""!==decimalValue?"."+decimalValue:""}`;jQuery(".chrome-ai-translator_progress").css({width:`${formattedProgress}%`}).text(`${formattedProgress}%`)};stopTranslation=()=>{this.translateStatus=!1};reInit=()=>{this.translateBtnEvents()};startTranslation=()=>{this.translateStatus=!0,this.startTranslationProcess(this.completedTranslateIndex+1)};static svgIcons=iconName=>{const Icons={copy:'<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="16px" width="16px" xmlns="http://www.w3.org/2000/svg" fill="#2271b1"><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"></path></svg>'};return Icons[iconName]||""}}(jQuery=>{let startTime=null;jQuery(document).ready(async()=>{let transalationInitialize=!1;const TranslatorObject=await ChromeAiTranslator.Object({mainWrapperSelector:"#ChromeAiTranslator-widget-model",btnSelector:"#ChromeAiTranslator-widget-model #chrome_ai_translator_element",stringSelector:"#ChromeAiTranslator-widget-model .lcat_string_container table tbody tr td.target.translate",progressBarSelector:"#ChromeAiTranslator-widget-model .lcat_translate_progress",sourceLanguage:"en",targetLanguage:locoConf.conf.locale.lang,targetLanguageLabel:locoConf.conf.locale.label,onStartTranslationProcess:startTransaltion,onComplete:completeTranslation,onLanguageError:languageError,onBeforeTranslate:beforeTranslate,onStopTranslation:onStopTranslation});TranslatorObject.hasOwnProperty("init")&&(jQuery(document).on("click","#ChromeAiTranslator_settings_btn",(function(){const stringsToTranslate=jQuery("#ChromeAiTranslator-widget-model .lcat_string_container table tbody tr td.target.translate");transalationInitialize||"function"!=typeof TranslatorObject.init?"function"==typeof TranslatorObject.reInit&&stringsToTranslate.length>0&&TranslatorObject.reInit():stringsToTranslate.length>0&&(transalationInitialize=!0,TranslatorObject.init())})),jQuery(window).on("click",event=>{event.target.closest(".modal-content")||event.target.closest("#lcat-dialog")||TranslatorObject.stopTranslation()}),jQuery(document).on("click",".ChromeAiTranslator-widget-header .close",()=>{TranslatorObject.stopTranslation()}))});const startTransaltion=()=>{startTime=Date.now();const stringContainer=jQuery("#ChromeAiTranslator-widget-model .modal-content .lcat_string_container");stringContainer[0].scrollHeight>100&&jQuery("#ChromeAiTranslator-widget-model .lcat_translate_progress").fadeIn("slow")},onStopTranslation=()=>{jQuery("#ChromeAiTranslator-widget-model .lcat_translate_progress").fadeOut("slow")},beforeTranslate=ele=>{const stringContainer=jQuery("#ChromeAiTranslator-widget-model .modal-content .lcat_string_container"),scrollStringContainer=position=>{stringContainer.scrollTop(position)},stringContainerPosition=stringContainer[0].getBoundingClientRect(),eleTopPosition=ele.closest("tr").offsetTop,containerHeight=stringContainer.height();eleTopPosition>containerHeight+stringContainerPosition.y&&scrollStringContainer(eleTopPosition-containerHeight+ele.offsetHeight)},completeTranslation=data=>{const totalTime=Math.round((Date.now()-startTime)/1e3);jQuery("#ChromeAiTranslator-widget-model .lcat_stats").fadeIn("slow");const container=jQuery("#ChromeAiTranslator-widget-model");container.data("translation-time",totalTime),container.data("translation-provider","chrome-ai"),setTimeout(()=>{jQuery("#ChromeAiTranslator-widget-model .lcat_save_strings").prop("disabled",!1),jQuery("#ChromeAiTranslator-widget-model .lcat_translate_progress").fadeOut("slow")},2500)},handleDisabledMessage=msg=>{jQuery("#lcat-chromeai-disabled-message").on("click",e=>{e.preventDefault();const dialog="#lcat-dialog";jQuery(dialog).dialog("instance")&&jQuery(dialog).dialog("close");const statusDialog=jQuery("#lcat-chromeai-disabled-message-content").html(msg);initializeClipboard(),statusDialog.dialog(statusDialog.dialog("instance")?"open":{title:"Chrome AI Translator Status",modal:!0,width:500,draggable:!1,closeOnEscape:!0,buttons:{Cancel:function(){jQuery(this).dialog("close")}},close:function(){jQuery(this).dialog("destroy")}})})};function initializeClipboard(){const clipboardElements=document.querySelectorAll(".chrome-ai-translator-flags"),copyClipboard=async(text,startCopyStatus,endCopyStatus)=>{if(text&&""!==text)try{if(navigator&&navigator.clipboard&&navigator.clipboard.writeText)await navigator.clipboard.writeText(text);else{const div=document.createElement("div");if(div.textContent=text,document.body.appendChild(div),window.getSelection&&document.createRange){const range=document.createRange();range.selectNodeContents(div);const selection=window.getSelection();selection.removeAllRanges(),selection.addRange(range)}document.execCommand&&document.execCommand("copy"),document.body.removeChild(div)}startCopyStatus(),setTimeout(endCopyStatus,800)}catch(err){console.error("Error copying text to clipboard:",err)}};clipboardElements.forEach(element=>{element.classList.add("lcat-tooltip-element"),element.addEventListener("click",e=>{e.preventDefault();const toolTipExists=element.querySelector(".lcat-tooltip");if(toolTipExists)return;const toolTipElement=document.createElement("span");toolTipElement.textContent="Text to be copied.",toolTipElement.className="lcat-tooltip",element.appendChild(toolTipElement),copyClipboard(element.getAttribute("data-clipboard-text"),()=>{toolTipElement.classList.add("lcat-tooltip-active")},()=>{setTimeout(()=>{toolTipElement.remove()},800)})})})}const languageError=msg=>{jQuery("#ChromeAiTranslator_settings_btn").hide(),jQuery("#lcat-chromeai-disabled-message").removeClass("d-none").show(),handleDisabledMessage(msg)}})(jQuery);